#applicaiotn name put the same servier we provide = configserver
spring.application.name=configserver
server.port=8071

#acces to storage configuration can store in: class path, git, and fild system
#spring.profiles.active=native

#spring.cloud.config.server.native.search-locations=classpath:/config-account
#spring.cloud.config.server.native.search-locations=classpath:/config-card
#spring.cloud.config.server.native.search-locations=classpath:/config-loan


#config file from public github
#spring.profiles.active=git
spring.cloud.config.server.git.uri=https://github.com/longvibol/bank-config-server.git

spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.default-label=main
encrypt.key=viollong


#rabitmq setup
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#actuator
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
management.endpoint.shutdown.enabled=true
management.metrics.tags.application: ${spring.application.name}


management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.endpoint.health.probes.enabled=true

logging.level.com.piseth.configserver=DEBUG
logging.pattern.level= "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"


#----------------------------------
#Private
#spring.cloud.config.server.git.uri=https://github.com/longvibol/bank-config-server-private.git
#spring.cloud.config.server.git.username=vibollong
#spring.cloud.config.server.git.password=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
#encrypt.key=vibollong



#spring.cloud.config.server.native.search-locations=file:///C://bankdata//config

#servier it is access by port so for account we put 8071, lone 8072, account 8073 example 


#server.port=8072
#server.port=8073




