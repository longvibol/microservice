#spring.datasource.url= jdbc:postgresql://postgres:5432/account_service
#
#spring.datasource.username= account
#spring.datasource.password= account123

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=ture
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update

spring.application.name=account
#spring.profiles.active=prod

#spring.config.import=configserver:http://configserver:8071
spring.config.import=optional:configserver:http://localhost:8071/
server.port=8080


#Eureka Server configuration
eureka.instance.preferIpAddress=true
#we register with eureka server with Ip address

eureka.client.registerWithEureka=true
#every client register with eureka anable 

eureka.client.fetchRegistry=true
#loadbance for register called

eureka.client.serviceUrl.defaultZone=http://localhost:9000/eureka/

info.app.name = Account Microservice
info.app.description = Piseth Bank Account App
info.app.version = 1.0.0
management.info.env.enabled = true

management.endpoint.shutdown.enabled=true

#spring.cloud.config.server.git.clone-on-start=true
#spring.cloud.config.server.git.default-label=main



#optional: if we don't put it mean the configserver need to start first so the account can not run 


spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

management.endpoints.web.exposure.include=*

