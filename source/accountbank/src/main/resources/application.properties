spring.application.name=account
server.port=8081


spring.datasource.url= jdbc:postgresql://${POSTGRES_HOST_NAME:localhost}:5433/account_service
#spring.datasource.url= jdbc:postgresql://localhost:5432/account_service
spring.datasource.username= account
spring.datasource.password= account123

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=ture
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update


#spring.profiles.active=prod

#spring.config.import=configserver:http://configserver:8071
spring.config.import=optional:configserver:http://localhost:8071/


#Eureka Server configuration
eureka.instance.preferIpAddress=true
#we register with eureka server with Ip address
eureka.client.registerWithEureka=true
#every client register with eureka anable 
eureka.client.fetchRegistry=true
#loadbance for register called
eureka.client.serviceUrl.defaultZone=http://localhost:9000/eureka/


info.app.name = Account Microservice
info.app.description = Piseth Bank Account App
info.app.version = 1.0.0
management.info.env.enabled = true
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=*

#spring.cloud.config.server.git.clone-on-start=true
#spring.cloud.config.server.git.default-label=main

#optional: if we don't put it mean the configserver need to start first so the account can not run 

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true



#Circuit Breaker
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
resilience4j.circuitbreaker.instances.customerDetailSuport.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instances.customerDetailSuport.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.customerDetailSuport.waitDurationInOpenState= 30000
resilience4j.circuitbreaker.instances.customerDetailSuport.permittedNumberOfCallsInHalfOpenState=2


#Register Retry in Actuator: Retry 
resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.retryCustomerDetail.maxRetryAttempts= 3
resilience4j.retry.instances.retryCustomerDetail.waitDuration= 2000

#rateLimiter 
resilience4j.ratelimiter.configs.default.registerHealthIndicator= true
resilience4j.ratelimiter.instances.sayHelloLimiter.timeoutDuration=5000
resilience4j.ratelimiter.instances.sayHelloLimiter.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.sayHelloLimiter.limitForPeriod=1




























